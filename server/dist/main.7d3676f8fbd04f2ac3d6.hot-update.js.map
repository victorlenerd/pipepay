{"version":3,"sources":["webpack:///./src/api/resources/invoice/invoice.controller.js"],"names":["generateController","createOne","req","res","body","console","log","userId","user","sub","marchantEmail","email","marchantName","name","marchantAccountNumber","marchantBankCode","verifyCode","recode","type","bankCharges","pipePayFee","Math","min","purchaseAmount","totalPrice","deliveryAmount","milestones","length","reduce","pv","amount","line_items","customerTotalAmount","customerDeliveryFee","customPipepayFee","reconciliator","who","original","fee","whoPaysDeliveryFee","whoPaysPipepayFee","push","map","description","CreateInvoice","customerEmail","customerName","phone","customerPhone","request_code","data","invoice_code","InvoiceModel","create","err","doc","status","send","error","message","success","save"],"mappings":"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","file":"main.7d3676f8fbd04f2ac3d6.hot-update.js","sourcesContent":["import InvoiceModel from './invoice.model';\nimport recode from '../../modules/recode';\nimport generateController from '../../modules/generateController';\nimport { CreateInvoice } from '../../modules/invoice';\n\nexport default generateController(InvoiceModel, {\n    createOne: async (req, res) => {\n        var body = req.body;\n        \n        console.log(\"body\", body);\n\n        body.userId = req.user.sub;        \n        body.marchantEmail = req.user.email;\n        body.marchantName = req.user.name;\n        body.marchantAccountNumber = req.user['custom:account_number'];\n        body.marchantBankCode =  req.user['custom:bank_code'];\n\n        body.verifyCode = process.env.NODE_ENV === 'testing' ? 'AXYZ0000' : recode();\n\n        if (body.type === 'good') {            \n            body.bankCharges = 100;\n            body.pipePayFee = Math.min(((body.purchaseAmount * 5) / 100),  5000) + body.bankCharges;\n            body.totalPrice = body.purchaseAmount + body.deliveryAmount + body.pipePayFee;\n        } else {\n            body.bankCharges = ((body.milestones.length * 50));\n            body.purchaseAmount = body.milestones.reduce((pv, { amount }) => { return amount + pv }, 0);\n            body.purchaseAmount\n            body.pipePayFee = Math.min(((body.purchaseAmount * 5) / 100),  5000) + body.bankCharges;\n            body.deliveryAmount = 0;\n            body.totalPrice =  body.purchaseAmount + body.pipePayFee ;\n        }\n\n        let line_items = [];\n\n        let customerTotalAmount = body.purchaseAmount;\n        let customerDeliveryFee = 0;\n        let customPipepayFee = 0;\n\n        const reconciliator = (who, original, fee) => {\n            if (who === 'both') {\n                return original += (fee / 2);\n            } else if (who === 'buyer') {\n                return original += fee;\n            } else {\n                return original;\n            }\n        }\n\n        customerDeliveryFee = reconciliator(body.whoPaysDeliveryFee, customerDeliveryFee, body.deliveryAmount);\n        customPipepayFee = reconciliator(body.whoPaysPipepayFee, customPipepayFee, body.pipePayFee);\n\n        if (body.type === 'good') {\n            line_items = [{ 'name': 'Purchase Price', 'amount': customerTotalAmount * 100 }];\n\n            if (customPipepayFee > 0) line_items.push({ 'name': 'PipePay Fee', 'amount': customPipepayFee * 100 });\n            if (customerDeliveryFee > 0) line_items.push({ 'name': 'Delivery Fee', 'amount': customerDeliveryFee * 100 });\n        } else  {\n            line_items = body.milestones.map(({ description, amount }) => ({ name: description, amount: amount * 100 }));\n            line_items.push({ 'name': 'PipePay Fee', 'amount':  body.pipePayFee * 100 });\n        }\n\n        try {\n            const { data: { request_code } } = await CreateInvoice({ email: body.customerEmail, name: body.customerName, phone: body.customerPhone }, customerTotalAmount * 100, body.description, line_items);\n            body.invoice_code = request_code;\n\n            InvoiceModel.create(body, async (err, doc) => {\n                if (err) {\n                    console.log(\"err\", err);\n                    return res.status(400).send({ error: { message: 'Could not create the invoice' }, success: false });\n                }\n                delete doc.verifyCode;\n                doc.status = \"sent\";\n                doc.save();\n                res.send({ data: doc, success: true });\n            });\n        } catch(err) {\n            console.log('err', err);\n            return res.status(400).send({ err, success: false });\n        }\n    }\n});"],"sourceRoot":""}