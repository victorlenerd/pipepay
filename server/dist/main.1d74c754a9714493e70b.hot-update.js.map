{"version":3,"sources":["webpack:///./src/api/resources/payment/payment.controller.js"],"names":["secret","generateController","createOne","req","res","hash","crypto","createHmac","update","body","digest","event","data","reference","amount","customer","first_name","last_name","email","metadata","marchantEmail","invoiceId","headers","PaymentModel","create","customerEmail","err","status","send","error","Error","InvoiceModel","findOneAndupdate","_id","$set","new","doc","Transfer","success","message","getOne","id","params","findOne"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,SAAS,kDAAf;;AAEA,+DAAe,2EAAAC,CAAmB,sDAAnB,EAAiC;AAC5CC,eAAW,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACrB,YAAMC,OAAO,6CAAAC,CAAOC,UAAP,CAAkB,QAAlB,EAA4BP,MAA5B,EAAoCQ,MAApC,CAA2C,4EAAeL,IAAIM,IAAnB,CAA3C,EAAqEC,MAArE,CAA4E,KAA5E,CAAb;AADqB,wBAE8GP,IAAIM,IAFlH;AAAA,YAEbE,KAFa,aAEbA,KAFa;AAAA,uCAENC,IAFM;AAAA,YAEEC,SAFF,kBAEEA,SAFF;AAAA,YAEaC,MAFb,kBAEaA,MAFb;AAAA,mDAEqBC,QAFrB;AAAA,YAEiCC,UAFjC,yBAEiCA,UAFjC;AAAA,YAE6CC,SAF7C,yBAE6CA,SAF7C;AAAA,YAEwDC,KAFxD,yBAEwDA,KAFxD;AAAA,2DAE+DC,QAF/D;AAAA,YAE2EC,aAF3E,0BAE2EA,aAF3E;AAAA,YAE0FC,SAF1F,0BAE0FA,SAF1F;;;AAIrB,YAAIhB,SAASF,IAAImB,OAAJ,CAAY,sBAAZ,CAAT,IAAgDX,UAAU,gBAA9D,EAAgF;AAC5EY,YAAA,sDAAAA,CAAaC,MAAb,CAAoB,EAAEC,eAAeP,KAAjB,EAAwBE,4BAAxB,EAAuCP,oBAAvC,EAAkDC,cAAlD,EAA0DO,oBAA1D,EAApB,EAA2F,UAACK,GAAD,EAAS;AAChG,oBAAIA,GAAJ,EAAS,OAAOtB,IAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAT,EAA2BF,QAAQ,KAAnC,EAArB,CAAP;;AAETI,gBAAA,8DAAAA,CAAaC,gBAAb,CAA8B,EAAEC,KAAKZ,SAAP,EAA9B,EAAkD,EAAEa,MAAM,EAAEP,QAAQ,MAAV,EAAR,EAAlD,EAAgF,EAACQ,KAAK,IAAN,EAAhF;AAAA,iMAA6F,iBAAOT,GAAP,EAAYU,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,6CACrFV,GADqF;AAAA;AAAA;AAAA;;AAAA,yEACzEtB,IAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,IAAIC,KAAJ,CAAUD,KAAV,CAAT,EAA2BF,QAAQ,KAAnC,EAArB,CADyE;;AAAA;AAAA;AAAA;AAAA,+CAI/E,iEAAAU,CAASD,IAAI,cAAJ,CAAT,EAA8BA,IAAI,uBAAJ,CAA9B,EAA4DA,IAAI,kBAAJ,CAA5D,CAJ+E;;AAAA;AAAA;AAAA,+CAK/E,gEAA0BpB,UAA1B,SAAwCC,SAAxC,EAAqDC,KAArD,EAA4DE,aAA5D,EAA2EN,MAA3E,CAL+E;;AAAA;AAMrFV,4CAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,IAAX,EAArB;AANqF;AAAA;;AAAA;AAAA;AAAA;AAAA,yEAQ9ElC,IAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEC,OAAO,EAAEU,SAAS,qBAAX,EAAT,EAA6CD,SAAS,KAAtD,EAArB,CAR8E;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA7F;;AAAA;AAAA;AAAA;AAAA;AAWH,aAdD;AAeH,SAhBD,MAgBO;AACHlC,gBAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,KAAX,EAArB;AACH;AACJ,KAxB2C;AAyB5CE,YAAQ,gBAACrC,GAAD,EAAMC,GAAN,EAAc;AAClB,YAAIqC,KAAKtC,IAAIuC,MAAJ,CAAWrB,SAApB;AACAE,QAAA,sDAAAA,CAAaoB,OAAb,CAAqB,EAAEtB,WAAWoB,EAAb,EAArB,EAAwC,UAAUf,GAAV,EAAeU,GAAf,EAAoB;AACxD,gBAAIV,GAAJ,EAAStB,IAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,KAAX,EAAkBT,OAAA,oEAAAA,KAAYH,GAAZ,CAAlB,EAArB;AACTtB,gBAAIuB,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,EAAEU,SAAS,IAAX,EAAiB1B,MAAMwB,GAAvB,EAArB;AACH,SAHD;AAIH;AA/B2C,CAAjC,CAAf,E","file":"main.1d74c754a9714493e70b.hot-update.js","sourcesContent":["import crypto from 'crypto';\nimport PaymentModel from './payment.model';\nimport InvoiceModel from '../invoice/invoice.model';\nimport * as mailer from '../../modules/mailer';\nimport generateController from '../../modules/generateController';\nimport Transfer from '../../modules/transfer';\n\nconst secret = process.env.PAYSTACK_SECRET;\n\nexport default generateController(PaymentModel, {\n    createOne: (req, res) => {\n        const hash = crypto.createHmac('sha512', secret).update(JSON.stringify(req.body)).digest('hex');\n        const { event, data: { reference, amount, customer: { first_name, last_name, email, metadata: { marchantEmail, invoiceId } } } } = req.body;\n\n        if (hash === req.headers['x-paystack-signature'] && event === 'charge.success') {\n            PaymentModel.create({ customerEmail: email, marchantEmail, reference, amount, invoiceId }, (err) => {\n                if (err) return res.status(500).send({ error: new Error(error), status: false });\n                \n                InvoiceModel.findOneAndupdate({ _id: invoiceId }, { $set :{ status: 'paid' } }, {new: true}, async (err, doc) => {\n                    if (err) return res.status(500).send({ error: new Error(error), status: false });\n\n                    try {\n                        await Transfer(doc['marchantName'], doc['marchantAccountNumber'], doc['marchantBankCode'], );\n                        await mailer.sendReceiptMail(`${first_name} ${last_name}`, email, marchantEmail, amount);\n                        res.status(200).send({ success: true });\n                    } catch (err) {\n                        return res.status(500).send({ error: { message: 'Could not send mail' }, success: false });\n                    }\n                })\n            });\n        } else {\n            res.status(500).send({ success: false });\n        }\n    },\n    getOne: (req, res) => {\n        var id = req.params.invoiceId;\n        PaymentModel.findOne({ invoiceId: id }, function (err, doc) {\n            if (err) res.status(401).send({ success: false, error: { ...err } });\n            res.status(200).send({ success: true, data: doc });\n        });\n    }\n});"],"sourceRoot":""}