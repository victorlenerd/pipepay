{"version":3,"sources":["webpack:///./src/api/resources/invoice/invoice.controller.js"],"names":["generateController","createOne","req","res","body","userId","user","id","marchantEmail","email","status","verifyCode","recode","InvoiceModel","create","err","doc","send","error","message","success","data"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAGA,+DAAe,2EAAAA,CAAmB,sDAAnB,EAAiC;AAC5CC,eAAW,mBAACC,GAAD,EAAMC,GAAN,EAAc;AACrB,YAAIC,OAAOF,IAAIE,IAAf;AACAA,aAAKC,MAAL,GAAcH,IAAII,IAAJ,CAASC,EAAvB;AACAH,aAAKI,aAAL,GAAqBN,IAAII,IAAJ,CAASG,KAA9B;AACAL,aAAKM,MAAL,GAAc,MAAd;AACAN,aAAKO,UAAL,GAAkB,SAAqC,SAArC,GAAkD,+DAAAC,EAApE;;AAEAC,QAAA,sDAAAA,CAAaC,MAAb,CAAoBV,IAApB;AAAA,yLAA0B,iBAAOW,GAAP,EAAYC,GAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,qCAClBD,GADkB;AAAA;AAAA;AAAA;;AAAA,iEACNZ,IAAIO,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB,EAAEC,OAAO,EAAEC,SAAS,8BAAX,EAAT,EAAsDC,SAAS,KAA/D,EAArB,CADM;;AAAA;AAAA;;AAIlB,uCAAOJ,IAAIL,UAAX;AAJkB;AAAA,uCAKZ,gEAAuBK,GAAvB,CALY;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,iEAOXb,IAAIO,MAAJ,CAAW,GAAX,EAAgBO,IAAhB,CAAqB,EAAEC,OAAO,EAAEC,SAAS,qBAAX,EAAT,EAA6CC,SAAS,KAAtD,EAArB,CAPW;;AAAA;;AAUtBjB,oCAAIc,IAAJ,CAAS,EAAEI,MAAML,GAAR,EAAaI,SAAS,IAAtB,EAAT;;AAVsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAA1B;;AAAA;AAAA;AAAA;AAAA;AAYH;AApB2C,CAAjC,CAAf,E","file":"main.953ccb5628806c255806.hot-update.js","sourcesContent":["import InvoiceModel from './invoice.model';\nimport * as mailer from '../../modules/mailer';\nimport recode from '../../modules/recode';\nimport generateController from '../../modules/generateController';\n\n\nexport default generateController(InvoiceModel, {\n    createOne: (req, res) => {\n        var body = req.body;\n        body.userId = req.user.id;\n        body.marchantEmail = req.user.email;\n        body.status = \"sent\";\n        body.verifyCode = process.env.NODE_ENV === 'testing' ? 'AXYZ0000' : recode();\n        \n        InvoiceModel.create(body, async (err, doc) => {\n            if (err) return res.status(500).send({ error: { message: 'Could not create the invoice' }, success: false });\n\n            try {\n                delete doc.verifyCode;\n                await mailer.sendInvoiceMail(doc);\n            } catch (err) {\n                return res.status(500).send({ error: { message: 'Could not send mail' }, success: false });\n            }\n            \n            res.send({ data: doc, success: true });\n        });\n    }\n});"],"sourceRoot":""}