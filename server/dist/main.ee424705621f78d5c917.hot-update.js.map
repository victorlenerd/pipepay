{"version":3,"sources":["webpack:///./src/api/resources/confirm/confirm.route.js"],"names":["ConfirmRouter","express","Router","param","DisputeController","getInvoiceId","route","post","req","res","invoiceId","params","status","body","accepted","emailCode","invoice","verifyCode","send","success","error","Error","InvoiceModel","findOneAndUpdate","_id","$set","new","data","Transfer","err"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;;AAEA,IAAMA,gBAAgB,8CAAAC,CAAQC,MAAR,EAAtB;;AAEAF,cAAcG,KAAd,CAAoB,WAApB,EAAiC,mEAAAC,CAAkBC,YAAnD;AACAL,cAAcM,KAAd,CAAoB,aAApB,EACKC,IADL,CACU,UAACC,GAAD,EAAMC,GAAN,EAAc;AAChB,QAAMC,YAAYF,IAAIG,MAAJ,CAAWD,SAA7B;AACA,QAAME,SAASJ,IAAIK,IAAJ,CAASC,QAAT,GAAoB,UAApB,GAAiC,UAAhD;AACA,QAAMC,YAAYP,IAAIK,IAAJ,CAASE,SAA3B;;AAEA,QAAIP,IAAIQ,OAAJ,CAAYC,UAAZ,KAA2BF,SAA/B,EAA0C,OAAON,IAAIG,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,OAAO,IAAIC,KAAJ,CAAU,oBAAV,CAAzB,EAArB,CAAP;;AAE1CC,IAAA,8DAAAA,CAAaC,gBAAb,CAA8B,EAAEC,KAAKd,SAAP,EAA9B,EAAkD,EAAEe,MAAM,EAAEb,cAAF,EAAR,EAAlD,EAAwE,EAACc,KAAK,IAAN,EAAxE;AAAA,qLAAqF,iBAAON,KAAP,EAAcO,IAAd;AAAA;AAAA;AAAA;AAAA;AACjF,gCAAIP,KAAJ,EAAWX,IAAIG,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBC,YAAlB,EAArB;;AADsE,kCAE7ER,WAAW,UAFkE;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,mCAInE,iEAAAgB,EAJmE;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAMzEnB,gCAAIG,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAAEC,SAAS,KAAX,EAAkBU,gBAAlB,EAArB;;AANyE;;AAUjFpB,gCAAIG,MAAJ,CAAW,GAAX,EAAgBM,IAAhB,CAAqB,EAAEC,SAAS,IAAX,EAAiBQ,UAAjB,EAArB;;AAViF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAArF;;AAAA;AAAA;AAAA;AAAA;AAYH,CApBL;;AAuBA,+DAAe3B,aAAf,E","file":"main.ee424705621f78d5c917.hot-update.js","sourcesContent":["import express from 'express';\nimport InvoiceModel from '../invoice/invoice.model';\nimport Transfer from '../../modules/transfer';\nimport DisputeController from '../dispute/dispute.controller';\n\nconst ConfirmRouter = express.Router();\n\nConfirmRouter.param('invoiceId', DisputeController.getInvoiceId);\nConfirmRouter.route('/:invoiceId')\n    .post((req, res) => {\n        const invoiceId = req.params.invoiceId;\n        const status = req.body.accepted ? 'accepted' : 'rejected';\n        const emailCode = req.body.emailCode;\n\n        if (req.invoice.verifyCode !== emailCode) return res.status(400).send({ success: false, error: new Error('Wrong invoice code') });\n\n        InvoiceModel.findOneAndUpdate({ _id: invoiceId }, { $set: { status } }, {new: true}, async (error, data) => {\n            if (error) res.status(400).send({ success: false, error });\n            if (status === \"accepted\") {\n                try {\n                    await Transfer();\n                } catch(err) {\n                    res.status(400).send({ success: false, err });\n                }\n            }\n\n            res.status(200).send({ success: true, data });\n        });\n    });\n\n\nexport default ConfirmRouter;"],"sourceRoot":""}