{"version":3,"sources":["webpack:///./src/api/modules/invoice.js"],"names":["secret","CreateCustomer","name","email","phone","resolve","reject","request","post","set","send","end","err","body","CreateInvoice","customer","amount","description","status","customer_code","data","due_date","addDays","Date"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA,IAAMA,SAAS,kDAAf;;AAEA,IAAMC,iBAAiB,SAAjBA,cAAiB;AAAA,QAAGC,IAAH,QAAGA,IAAH;AAAA,QAASC,KAAT,QAASA,KAAT;AAAA,QAAgBC,KAAhB,QAAgBA,KAAhB;AAAA,WAA4B,yEAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAChFC,QAAA,iDAAAA,CACKC,IADL,qCAEKC,GAFL,CAES,eAFT,cAEoCT,MAFpC,EAGKU,IAHL,CAGU;AACFR,sBADE;AAEFC,wBAFE;AAGFC;AAHE,SAHV,EAQKO,GARL,CAQS,UAACC,GAAD,SAAmB;AAAA,gBAAXC,IAAW,SAAXA,IAAW;;AACpB,gBAAID,GAAJ,EAASN,OAAOM,GAAP;AACTP,oBAAQQ,IAAR;AACH,SAXL;AAYH,KAbkD,CAA5B;AAAA,CAAvB;;AAeO,IAAMC,gBAAgB,SAAhBA,aAAgB,CAACC,QAAD,EAAWC,MAAX,EAAmBC,WAAnB;AAAA,WAAmC;AAAA,sLAAY,iBAAOZ,OAAP,EAAgBC,MAAhB;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCACtBL,eAAec,QAAf,CADsB;;AAAA;AAAA;AAChEG,kCADgE,SAChEA,MADgE;AAChDC,yCADgD,SACxDC,IADwD,CAChDD,aADgD;AAElEE,oCAFkE,GAEvD,wDAAAC,CAAQ,IAAIC,IAAJ,EAAR,EAAoB,CAApB,CAFuD;;;AAIxEhB,4BAAA,iDAAAA,CACKC,IADL,2CAEKC,GAFL,CAES,eAFT,cAEoCT,MAFpC,EAGKU,IAHL,CAGU;AACFK,0CAAUI,aADR;AAEFF,wDAFE;AAGFD,8CAHE;AAIFK;AAJE,6BAHV,EASKV,GATL,CASS,UAACC,GAAD,SAAmB;AAAA,oCAAXC,IAAW,SAAXA,IAAW;;AACpB,oCAAID,GAAJ,EAASN,OAAOM,GAAP;AACTP,wCAAQQ,IAAR;AACH,6BAZL;;AAJwE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAZ;;AAAA;AAAA;AAAA;AAAA,QAAnC;AAAA,CAAtB,C","file":"main.4c093089ee98eb90a72d.hot-update.js","sourcesContent":["import request from 'superagent';\nimport addDays from 'date-fns/add_days';\nconst secret = process.env.PAYSTACK_SECRET;\n\nconst CreateCustomer = ({ name, email, phone }) => new Promise((resolve, reject) => {\n    request\n        .post(`https://api.paystack.co/customer`)\n        .set(\"Authorization\", `Bearer ${secret}`)\n        .send({\n            name,\n            email,\n            phone\n        })\n        .end((err, { body }) => {\n            if (err) reject(err);\n            resolve(body);\n        });\n});\n\nexport const CreateInvoice = (customer, amount, description) => new Promise(async (resolve, reject) => {\n    const { status, data: { customer_code } } = await CreateCustomer(customer);\n    const due_date = addDays(new Date(), 7);\n\n    request\n        .post(`https://api.paystack.co/paymentrequest`)\n        .set(\"Authorization\", `Bearer ${secret}`)\n        .send({\n            customer: customer_code,\n            description,\n            amount,\n            due_date\n        })\n        .end((err, { body }) => {\n            if (err) reject(err);\n            resolve(body);\n        });\n});"],"sourceRoot":""}